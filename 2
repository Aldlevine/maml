using Maml.Graphics;
using Maml.Math;
using System.Collections.Generic;
using System.Diagnostics;

namespace Maml.Scene;

public class SceneTree
{
	public Node? Root { get; private set; } = new();

	public IEnumerable<Node> Nodes(Node? root = null)
	{
		if (root == null)
		{
			root = Root;
		}
		if (root != null)
		{
			yield return root;
			foreach (var child in root.Children)
			{
				foreach (var cc in Nodes(child))
				{
					yield return cc;
				}
			}
		}

	}
}

[DebuggerDisplay("{GetType().Name}#{Name}")]
public class Node
{
	public string Name { get; set; } = string.Empty;
	public Transform Transform { get; set; } = Transform.Identity;
	public List<Graphic> Graphics { get; init; } = new();
	public List<Node> Children { get; init; } = new();

	public override string? ToString() => $"{GetType().Name}#{Name}";
}
